;;===============================
;;Name: HONGRUI ZHENG
;;===============================

.orig x3000

MAIN
LD R6, STACK   ; initialize stack pointer
LD R0, N 	   ;
ADD R6, R6, -1 ; 
STR R0, R6, 0  ; PUSH SECOND ARGUMENT N INTO STACK
LD R0, M
ADD R6, R6, -1 ;
STR R0, R6, 0  ; PUSH FIRST ARGUEMNT M INTO STACK
JSR GCD
LDR R0, R6, 0
ADD R6, R6, 3  ; POP RETURN VALUE AND ARG OFF STACK
ST R0, ANSWER  ; SAVE THE ANSWER

HALT

STACK .fill xF000
N .fill 2688	; input n
M .fill 768		; input m
ANSWER .fill 0  ; save your answer here

GCD
	ADD R6, R6, -3  ; POINTS R6 TO OLD FP
	STR R7, R6, 1  ; STORE RETURN ADDRESS
	STR R5, R6, 0  ; STORE OLD FP INTO STACK
	ADD R5, R6, -1 ; CREATE NEW FP POINTING ONE ABOVE OLD FP

	LDR R0, R5, 4  ; LOAD FIRST ARGUMENT
	LDR R1, R5, 5  ; LOAD SECOND ARGUMENT
	NOT R1, R1     ;
	ADD R1, R1, 1  ; NEGATING SECOND ARGUMENT N
	ADD R2, R0, R1 ; M-N
	BRz RETM	   ; RETURN M IF TWO ARGUMENTS ARE EQUAL
	BRp MBIGGER    ; 
	LDR R1, R5, 5  ; LOAD SECOND ARGUMENT N AGAIN
	LDR R0, R5, 4  ; LOAD FIRST ARGUMENT M AGAIN
	ADD R6, R6, -1 ;
	STR R0, R6, 0  ; PUSH M AS FIRST ARGUMENT
	NOT R0, R0
	ADD R0, R0, 1  ; NEGATING M
	ADD R0, R1, R0 ; N-M
	ADD R6, R6, -1 ;
	STR R0, R6, 0  ; PUSH N-M AS SECOND ARGUMENT
	JSR GCD		   ; CALL GCD(M,N-M)
	BR RETURN
	

RETM
	BR RETURN

MBIGGER
	LDR R1, R5, 5  ; LOAD N AGAIN
	LDR R0, R5, 4  ; LOAD M AGAIN
	NOT R1, R1
	ADD R1, R1, 1  ; NEGATING N
	ADD R0, R1, R0 ; M-N
	ADD R6, R6, -1
	STR R0, R6, 0  ; PUSH M-N AS FIRST ARGUMENT
	ADD R6, R6, -1 
	LDR R1, R5, 5  ; LOAD N AGAIN
	STR R1, R6, 0  ; PUSH N AS SECOND ARGUMENT

	JSR GCD		   ; CALL GCD(M-N, N)
	BR RETURN
	
RETURN
	ADD R6, R5, 0  ; POINT SP TO FP
	STR R0, R5, 3  ; STORE RETURN VALUE
	LDR R7, R5, 2  ; RSTORE RETURN ADDRESS
	LDR R5, R5, 1  ; POINT R5 TO OLD FP
	ADD R6, R6, 3  ; POINT SP TO RETURN VALUE 
	RET



.end
